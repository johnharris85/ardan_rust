/*
 * Konnect Control Planes
 *
 * The API for Kong Konnect Control Planes.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ControlPlane : The control plane object contains information about a Kong control plane.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ControlPlane {
    /// The control plane ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// The name of the control plane.
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the control plane in Konnect.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Labels to facilitate tagged search on control planes. Keys must be of length 1-63 characters, and cannot start with 'kong', 'konnect', 'mesh', 'kic', or '_'.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "config")]
    pub config: Box<models::ControlPlaneConfig>,
    /// An ISO-8604 timestamp representation of control plane creation date.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// An ISO-8604 timestamp representation of control plane update date.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl ControlPlane {
    /// The control plane object contains information about a Kong control plane.
    pub fn new(id: uuid::Uuid, name: String, config: models::ControlPlaneConfig, created_at: String, updated_at: String) -> ControlPlane {
        ControlPlane {
            id,
            name,
            description: None,
            labels: None,
            config: Box::new(config),
            created_at,
            updated_at,
        }
    }
}

