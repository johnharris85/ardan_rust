/*
 * Konnect Control Planes
 *
 * The API for Kong Konnect Control Planes.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GroupStatus : The Group Status object contains information about the status of a control plane group.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupStatus {
    /// The control plane group ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// An ISO-8604 timestamp representation of control plane group status creation date.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// An ISO-8604 timestamp representation of control plane group status update date.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "conflicts", skip_serializing_if = "Option::is_none")]
    pub conflicts: Option<Vec<models::GroupConflict>>,
    /// The state of the control plane group.
    #[serde(rename = "state")]
    pub state: State,
}

impl GroupStatus {
    /// The Group Status object contains information about the status of a control plane group.
    pub fn new(id: uuid::Uuid, created_at: String, updated_at: String, state: State) -> GroupStatus {
        GroupStatus {
            id,
            created_at,
            updated_at,
            conflicts: None,
            state,
        }
    }
}
/// The state of the control plane group.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "OK")]
    Ok,
    #[serde(rename = "CONFLICT")]
    Conflict,
    #[serde(rename = "UNKNOWN")]
    Unknown,
}

impl Default for State {
    fn default() -> State {
        Self::Ok
    }
}

