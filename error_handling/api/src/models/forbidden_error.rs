/*
 * Konnect Control Planes
 *
 * The API for Kong Konnect Control Planes.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ForbiddenError {
    #[serde(rename = "status", deserialize_with = "Option::deserialize")]
    pub status: Option<serde_json::Value>,
    #[serde(rename = "title", deserialize_with = "Option::deserialize")]
    pub title: Option<serde_json::Value>,
    #[serde(rename = "type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Option<serde_json::Value>>,
    #[serde(rename = "instance", deserialize_with = "Option::deserialize")]
    pub instance: Option<serde_json::Value>,
    #[serde(rename = "detail", deserialize_with = "Option::deserialize")]
    pub detail: Option<serde_json::Value>,
}

impl ForbiddenError {
    pub fn new(status: Option<serde_json::Value>, title: Option<serde_json::Value>, instance: Option<serde_json::Value>, detail: Option<serde_json::Value>) -> ForbiddenError {
        ForbiddenError {
            status,
            title,
            r#type: None,
            instance,
            detail,
        }
    }
}

