/*
 * Konnect Control Planes
 *
 * The API for Kong Konnect Control Planes.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InvalidParameterChoiceItem {
    #[serde(rename = "field")]
    pub field: String,
    /// invalid parameters rules
    #[serde(rename = "rule")]
    pub rule: Rule,
    #[serde(rename = "reason")]
    pub reason: String,
    #[serde(rename = "choices")]
    pub choices: Vec<serde_json::Value>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
}

impl InvalidParameterChoiceItem {
    pub fn new(field: String, rule: Rule, reason: String, choices: Vec<serde_json::Value>) -> InvalidParameterChoiceItem {
        InvalidParameterChoiceItem {
            field,
            rule,
            reason,
            choices,
            source: None,
        }
    }
}
/// invalid parameters rules
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Rule {
    #[serde(rename = "enum")]
    Enum,
}

impl Default for Rule {
    fn default() -> Rule {
        Self::Enum
    }
}

