/*
 * Konnect Control Planes
 *
 * The API for Kong Konnect Control Planes.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BaseError : standard error
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseError {
    /// The HTTP status code of the error. Useful when passing the response body to child properties in a frontend UI. Must be returned as an integer. 
    #[serde(rename = "status")]
    pub status: i32,
    /// A short, human-readable summary of the problem. It should not change between occurences of a problem, except for localization. Should be provided as \"Sentence case\" for direct use in the UI. 
    #[serde(rename = "title")]
    pub title: String,
    /// The error type.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Used to return the correlation ID back to the user, in the format kong:trace:<correlation_id>. This helps us find the relevant logs when a customer reports an issue. 
    #[serde(rename = "instance")]
    pub instance: String,
    /// A human readable explanation specific to this occurence of the problem. This field may contain request/entity data to help the user understand what went wrong. Enclose variable values in square brackets. Should be provided as \"Sentence case\" for direct use in the UI. 
    #[serde(rename = "detail")]
    pub detail: String,
}

impl BaseError {
    /// standard error
    pub fn new(status: i32, title: String, instance: String, detail: String) -> BaseError {
        BaseError {
            status,
            title,
            r#type: None,
            instance,
            detail,
        }
    }
}

